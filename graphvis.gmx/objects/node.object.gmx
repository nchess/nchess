<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>neighbors = ds_list_create();
color = make_colour_hsv(random(255), 255,255); 
polygon = ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(color);
    draw_primitive_begin(pr_trianglefan);
        for(var i = 0; i &lt; ds_list_size(neighbors)+1; i++)
        {
            var a = i mod ds_list_size(neighbors);
            var b = (i+1) mod ds_list_size(neighbors);
        
            vx = (x + neighbors[|a].x + neighbors[|b].x)/3;
            vy = (y + neighbors[|a].y + neighbors[|b].y)/3;
            
            draw_vertex(vx, vy);
        }
    draw_primitive_end();

draw_set_color(c_black);
    draw_primitive_begin(pr_linestrip);
        for(var i = 0; i &lt; ds_list_size(neighbors)+2; i++)
        {
            var a = i mod ds_list_size(neighbors);
            var b = (i+1) mod ds_list_size(neighbors);
        
            vx = (x + neighbors[|a].x + neighbors[|b].x)/3;
            vy = (y + neighbors[|a].y + neighbors[|b].y)/3;
            
            draw_vertex(vx, vy);
        }
    draw_primitive_end();

draw_set_color(color);
    draw_circle(x,y, 16, 0);
    
draw_set_color(c_black);
    draw_circle(x,y, 16, 1);
    //for(var i = 0; i &lt; ds_list_size(neighbors); i++)
        //draw_line(x,y, neighbors[|i].x, neighbors[|i].y);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
