<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>neighbors = ds_list_create();
color = c_white; 
polygon = ds_list_create();

dirty = 0; 
active = true; 
hover = false; 
selectable = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(polygon);
ds_list_destroy(neighbors); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dirty |= (x != xprevious);
dirty |= (y != yprevious); 

if(dirty)
{
    ds_list_clear(polygon);

    for(var i = 0; i &lt; ds_list_size(neighbors); i++)
    {
        var a = i mod ds_list_size(neighbors);
        var b = (i+1) mod ds_list_size(neighbors);
        
        var na = neighbors[|a];
        var nb = neighbors[|b];
        
        ds_list_add(polygon, (na.x+x)/2, (na.y+y)/2);
        
        var adx = na.x - x; var ady = na.y - y;
        var bdx = nb.x - x; var bdy = nb.y - y;
        
        var intersect = lines_intersect((na.x+x)/2, (na.y+y)/2, (na.x+x)/2 - ady, (na.y+y)/2 + adx, 
                                        (nb.x+x)/2, (nb.y+y)/2, (nb.x+x)/2 - bdy, (nb.y+y)/2 + bdx, false);
        if(is_array(intersect))
            ds_list_add(polygon, intersect[0], intersect[1]);
        
        ds_list_add(polygon, (nb.x+x)/2, (nb.y+y)/2);
    }
    
    dirty = false;
}

if(ds_list_empty(polygon))
    hover = 0;
else if(!selectable)
    hover = 0;
else
    hover = point_in_polygon(mouse.x, mouse.y, polygon); 

depth = -active;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(hover)
{
    switch(color)
    {
        case c_white: color = c_ltgray; break;
        case c_ltgray: color = c_gray; break;
        case c_gray: color = c_dkgray; break;
        case c_dkgray: color = c_white; break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!selectable)
    exit;

if(active)
{
    draw_set_color(color);
        draw_primitive_begin(pr_trianglefan);
            for(var i = 0; i &lt; ds_list_size(polygon); i += 2)
                draw_vertex(polygon[|i  ], polygon[|i+1]);
        draw_primitive_end();
        
    if(hover)
    {
        draw_set_blend_mode(bm_add);
            draw_primitive_begin(pr_trianglefan);
                draw_vertex_colour(x,y, c_white, 0);
                for(var i = 0; i &lt; ds_list_size(polygon); i += 2)
                    draw_vertex_colour(polygon[|i  ], polygon[|i+1], c_white, 0.5);
            draw_primitive_end();
        draw_set_blend_mode(bm_normal);
    }
    
    draw_set_color(c_black);
        draw_primitive_begin(pr_linestrip);
            for(var i = 0; i &lt; ds_list_size(polygon); i += 2)
                draw_vertex(polygon[|i  ], polygon[|i+1]);
            //draw_vertex(polygon[|0], polygon[|1]);
        draw_primitive_end();
}
else
{
    draw_set_color(color);
        draw_circle(x,y, 16, 1);
        
    draw_set_color(c_black);
        for(var i = 0; i &lt; ds_list_size(neighbors); i++)
            draw_line(x,y, neighbors[|i].x, neighbors[|i].y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>render(self);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(hover)
    active = !active;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>color = c_white;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
